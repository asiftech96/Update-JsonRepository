Authenticators:

package com.atechjson.json;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

@Entity
@Table(name = "Authenticators_test")
public class Authenticators {

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private Integer authenticatorsId;

	private String optional;
	private String regex;
	private String parameter_name;
	private String data_type;
	private String error_message;
	private String seq;

	@ManyToOne(cascade = CascadeType.REFRESH, targetEntity = Biller.class)
	@JoinColumn(name = "BillerID")
	private Biller biller;

	public Biller getBiller() {
		return biller;
	}

	public void setBiller(Biller biller) {
		this.biller = biller;
	}

	public Integer getAuthenticatorsId() {
		return authenticatorsId;
	}

	public void setAuthenticatorsId(Integer authenticatorsId) {
		this.authenticatorsId = authenticatorsId;
	}

	public String getOptional() {
		return optional;
	}

	public void setOptional(String optional) {
		this.optional = optional;
	}

	public String getRegex() {
		return regex;
	}

	public void setRegex(String regex) {
		this.regex = regex;
	}

	public String getParameter_name() {
		return parameter_name;
	}

	public void setParameter_name(String parameter_name) {
		this.parameter_name = parameter_name;
	}

	public String getData_type() {
		return data_type;
	}

	public void setData_type(String data_type) {
		this.data_type = data_type;
	}

	public String getError_message() {
		return error_message;
	}

	public void setError_message(String error_message) {
		this.error_message = error_message;
	}

	public String getSeq() {
		return seq;
	}

	public void setSeq(String seq) {
		this.seq = seq;
	}

}


============================================

Biller:

package com.atechjson.json;

import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

@Entity
@Table(name = "Biller_test")
public class Biller {

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private Integer billerId;
	private String objectid;
	private String billerid1;
	private String biller_legal_name;
	private String biller_name;
	private String biller_location;
	private String biller_category;
	private String biller_reg_address;
	private String biller_reg_city;
	private String biller_reg_pin;
	private String biller_reg_state;
	private String biller_reg_country;
	private String biller_mode;

	/* Asif update code */

	private String biller_status;
	private String biller_created_date;
	private String biller_lastmodified_date;
	private String biller_logo;
	private String biller_bill_copy;
	private String biller_type;
	private String partial_pay;
	private String pay_after_duedate;
	private String online_validation;
	private String isbillerbbps;
	private String paymentamount_validation;
	private String bbps_billerid;
	private String bill_presentment;

	@OneToMany(cascade = CascadeType.ALL, mappedBy = "biller", fetch = FetchType.LAZY)
	private List<Authenticators> authenticators = null;

	public List<Authenticators> getAuthenticators() {
		return authenticators;
	}

	public void setAuthenticators(List<Authenticators> authenticators) {
		this.authenticators = authenticators;
	}

	public String getBiller_status() {
		return biller_status;
	}

	public void setBiller_status(String biller_status) {
		this.biller_status = biller_status;
	}

	public String getBiller_created_date() {
		return biller_created_date;
	}

	public void setBiller_created_date(String biller_created_date) {
		this.biller_created_date = biller_created_date;
	}

	public String getBiller_lastmodified_date() {
		return biller_lastmodified_date;
	}

	public void setBiller_lastmodified_date(String biller_lastmodified_date) {
		this.biller_lastmodified_date = biller_lastmodified_date;
	}

	public String getBiller_logo() {
		return biller_logo;
	}

	public void setBiller_logo(String biller_logo) {
		this.biller_logo = biller_logo;
	}

	public String getBiller_bill_copy() {
		return biller_bill_copy;
	}

	public void setBiller_bill_copy(String biller_bill_copy) {
		this.biller_bill_copy = biller_bill_copy;
	}

	public String getBiller_type() {
		return biller_type;
	}

	public void setBiller_type(String biller_type) {
		this.biller_type = biller_type;
	}

	public String getPartial_pay() {
		return partial_pay;
	}

	public void setPartial_pay(String partial_pay) {
		this.partial_pay = partial_pay;
	}

	public String getPay_after_duedate() {
		return pay_after_duedate;
	}

	public void setPay_after_duedate(String pay_after_duedate) {
		this.pay_after_duedate = pay_after_duedate;
	}

	public String getOnline_validation() {
		return online_validation;
	}

	public void setOnline_validation(String online_validation) {
		this.online_validation = online_validation;
	}

	public String getIsbillerbbps() {
		return isbillerbbps;
	}

	public void setIsbillerbbps(String isbillerbbps) {
		this.isbillerbbps = isbillerbbps;
	}

	public String getPaymentamount_validation() {
		return paymentamount_validation;
	}

	public void setPaymentamount_validation(String paymentamount_validation) {
		this.paymentamount_validation = paymentamount_validation;
	}

	public String getBbps_billerid() {
		return bbps_billerid;
	}

	public void setBbps_billerid(String bbps_billerid) {
		this.bbps_billerid = bbps_billerid;
	}

	public String getBill_presentment() {
		return bill_presentment;
	}

	public void setBill_presentment(String bill_presentment) {
		this.bill_presentment = bill_presentment;
	}

	public String getBiller_location() {
		return biller_location;
	}

	public void setBiller_location(String biller_location) {
		this.biller_location = biller_location;
	}

	public String getBiller_category() {
		return biller_category;
	}

	public void setBiller_category(String biller_category) {
		this.biller_category = biller_category;
	}

	public String getBiller_reg_address() {
		return biller_reg_address;
	}

	public void setBiller_reg_address(String biller_reg_address) {
		this.biller_reg_address = biller_reg_address;
	}

	public String getBiller_reg_city() {
		return biller_reg_city;
	}

	public void setBiller_reg_city(String biller_reg_city) {
		this.biller_reg_city = biller_reg_city;
	}

	public String getBiller_reg_pin() {
		return biller_reg_pin;
	}

	public void setBiller_reg_pin(String biller_reg_pin) {
		this.biller_reg_pin = biller_reg_pin;
	}

	public String getBiller_reg_state() {
		return biller_reg_state;
	}

	public void setBiller_reg_state(String biller_reg_state) {
		this.biller_reg_state = biller_reg_state;
	}

	public String getBiller_reg_country() {
		return biller_reg_country;
	}

	public void setBiller_reg_country(String biller_reg_country) {
		this.biller_reg_country = biller_reg_country;
	}

	public String getBiller_mode() {
		return biller_mode;
	}

	public void setBiller_mode(String biller_mode) {
		this.biller_mode = biller_mode;
	}

	public Integer getBillerId() {
		return billerId;
	}

	public void setBillerId(Integer billerId) {
		this.billerId = billerId;
	}

	public String getObjectid() {
		return objectid;
	}

	public void setObjectid(String objectid) {
		this.objectid = objectid;
	}

	public String getBillerid1() {
		return billerid1;
	}

	public void setBillerid1(String billerid1) {
		this.billerid1 = billerid1;
	}

	public String getBiller_legal_name() {
		return biller_legal_name;
	}

	public void setBiller_legal_name(String biller_legal_name) {
		this.biller_legal_name = biller_legal_name;
	}

	public String getBiller_name() {
		return biller_name;
	}

	public void setBiller_name(String biller_name) {
		this.biller_name = biller_name;
	}

}


==================================================




package com.atechjson.json;

import org.springframework.data.jpa.repository.JpaRepository;

public interface BillerRepository extends JpaRepository<Biller, Long> {

}


================================================


package com.atechjson.json;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;
import org.springframework.test.context.junit4.SpringRunner;


@RunWith(SpringRunner.class)
@SpringBootTest(webEnvironment=WebEnvironment.RANDOM_PORT)
public class Jsonread {
	
	@Autowired
	private BillerRepository billerRepository;
	
	
	@Test
	public void testBiller() {
		
		JSONParser jsonParser = new JSONParser();
        
        try (FileReader reader = new FileReader("D:\\_projects\\Asif\\HGA1F0A3990000021241.json"))
        {
            //Read JSON file
            Object obj = jsonParser.parse(reader);
//            JSONObject jsonObj = (JSONObject) obj;
            org.json.simple.JSONArray billerList = (org.json.simple.JSONArray) obj;
            System.out.println(billerList);
            
            //Iterate over biller array
          billerList.forEach( emp -> parseBillerObject( (org.json.simple.JSONObject) emp ) );
//          org.json.JSONObject obj2 = new org.json.JSONObject(jsonObj);
//          org.json.JSONObject job_schedule = obj2.getJSONObject("authenticators");
//          org.json.JSONArray schedule_Array = job_schedule.getJSONArray("day");
//
//              for (int i = 0; i < schedule_Array.length(); i++) 
//              {
//              JSONObject jOBJ = schedule_Array.getJSONObject(i);
//
//                     JSONArray jArray = jOBJ.getJSONArray("items");
//                      for (int j = 0; j < jArray.length(); j++) 
//                      {
//                          JSONObject jOBJNEW = jArray.getJSONObject(j);
//                      }
//              }
          
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }
	
	  private void parseBillerObject(org.json.simple.JSONObject biller) 
	    {
		  Biller biller1 = new Biller();
		    String objectid = (String) biller.get("objectid");    
	        String billerid = (String) biller.get("billerid");  
	        String biller_legal_name = (String) biller.get("biller_legal_name");    
	        String biller_name = (String) biller.get("biller_name");  
	        String biller_location = (String) biller.get("biller_location");  
	        String biller_category = (String) biller.get("biller_category");  
	        String biller_reg_address = (String) biller.get("biller_reg_address");  
	        String biller_reg_city = (String) biller.get("biller_reg_city");  
	        String biller_reg_pin = (String) biller.get("biller_reg_pin");  
	        String biller_reg_state = (String) biller.get("biller_reg_state");  
	        String biller_reg_country = (String) biller.get("biller_reg_country");  
	        String biller_mode = (String) biller.get("biller_mode"); 
	        String biller_status = (String) biller.get("biller_status"); 
	        String biller_created_date = (String) biller.get("biller_created_date"); 
	        String biller_lastmodified_date = (String) biller.get("biller_lastmodified_date"); 
	        String biller_logo = (String) biller.get("biller_logo"); 
	        String biller_bill_copy = (String) biller.get("biller_bill_copy"); 
	        String biller_type = (String) biller.get("biller_type"); 
	        String partial_pay = (String) biller.get("partial_pay"); 
	        String pay_after_duedate = (String) biller.get("pay_after_duedate"); 
	        String online_validation = (String) biller.get("online_validation"); 
	        String isbillerbbps = (String) biller.get("isbillerbbps"); 
	        String paymentamount_validation = (String) biller.get("paymentamount_validation"); 
	        String bbps_billerid = (String) biller.get("bbps_billerid"); 
	        String bill_presentment = (String) biller.get("bill_presentment"); 
           
//	        Authenticators implementation
	        String optional = null;
	        String regex = null;
	        String parameter_name = null;
	        String data_type = null;
	        String error_message = null;
	        String seq = null;
	        JSONObject obj = new JSONObject(biller);
	        JSONArray schedule_Array = obj.getJSONArray("authenticators");
	        List<Authenticators> authenticators = new ArrayList<Authenticators>();
            for (int j = 0; j < schedule_Array.length(); j++) 
            {
                JSONObject jOBJNEW = schedule_Array.getJSONObject(j);
                 optional =	(String) jOBJNEW.get("optional");
                 regex =	(String) jOBJNEW.get("regex");
                 parameter_name =	(String) jOBJNEW.get("parameter_name");
                 data_type =	(String) jOBJNEW.get("data_type");
                 error_message =	(String) jOBJNEW.get("error_message");
                 seq =  (String) jOBJNEW.get("seq");
                 
                 Authenticators authenticators2 = new Authenticators();
                 authenticators2.setOptional(optional);
                 authenticators2.setRegex(regex);
                 authenticators2.setParameter_name(parameter_name);
                 authenticators2.setData_type(data_type);
                 authenticators2.setError_message(error_message);
                 authenticators2.setSeq(seq);
                 authenticators.add(authenticators2);
                 authenticators.get(j).setBiller(biller1);
            }
            
	        biller1.setObjectid(objectid);
	        biller1.setBillerid1(billerid);
	        biller1.setBiller_legal_name(biller_legal_name);
	        biller1.setBiller_name(biller_name);
	        biller1.setBiller_location(biller_location);
	        biller1.setBiller_category(biller_category);
	        biller1.setBiller_reg_address(biller_reg_address);
	        biller1.setBiller_reg_city(biller_reg_city);
	        biller1.setBiller_reg_pin(biller_reg_pin);
	        biller1.setBiller_reg_state(biller_reg_state);
	        biller1.setBiller_reg_country(biller_reg_country);
	        biller1.setBiller_mode(biller_mode);
	        biller1.setBiller_status(biller_status);
	        biller1.setBiller_created_date(biller_created_date);
	        biller1.setBiller_lastmodified_date(biller_lastmodified_date);
	        biller1.setBiller_logo(biller_logo);
	        biller1.setBiller_bill_copy(biller_bill_copy);
	        biller1.setBiller_type(biller_type);
	        biller1.setPartial_pay(partial_pay);
	        biller1.setPay_after_duedate(pay_after_duedate);
	        biller1.setOnline_validation(online_validation);
	        biller1.setIsbillerbbps(isbillerbbps);
	        biller1.setPaymentamount_validation(paymentamount_validation);
	        biller1.setBbps_billerid(bbps_billerid);
	        biller1.setBill_presentment(bill_presentment);
	        biller1.setAuthenticators(authenticators);
	        billerRepository.save(biller1);
	    }
	
	}
  
  
  
=======================================


package com.atechjson.json;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.scheduling.annotation.EnableScheduling;

@SpringBootApplication
@EnableScheduling
public class SpringBootDataJpaApplication {

	public static void main(String[] args) {
		SpringApplication.run(SpringBootDataJpaApplication.class, args);
	}

}


===================================================



<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.atechjson</groupId>
	<artifactId>json</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>json</name>
	<description>Crud operation</description>
	<properties>
		<java.version>1.8</java.version>
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20200518</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.9</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.springframework/spring-mock -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-mock</artifactId>
			<version>2.0.8</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>

===========================================
